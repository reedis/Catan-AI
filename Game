from Board import *
from Tile import *
from Player import *
import random

class Game:
    def __init__(self, playerCount, randomStart=False):
        self.playerCount = playerCount
        self.currentPlayer = 0
        self.board = Board(randomStart)
        self.round = 1
        self.players = []
        for i in range(0, playerCount):
            self.players.append(Player(i))


    def endTurn(self):
        self.currentPlayer = (self.currentPlayer+1) % self.playerCount
        if self.currentPlayer == 0:
            self.round += 1 
            if self.round == 3:
                print("SET UP COMPLETE")
        print("It is player%d's turn now, round %d" % (self.currentPlayer, self.round))
        
    def buildSettlement(self, tileNumber, location):
        if self.players[self.currentPlayer].buildSettlement():
            if self.board.placeSettlement(tileNumber, location, self.currentPlayer, self.inSetUp):
                print("settlement placed at tile %d, location %d, by player %d" % (tileNumber, location, self.currentPlayer))
            else:
                print("issue placing settlement please try again")
        else:
            print("No settlements left")
        

    def buildRoad(self, tileNumber, location):
        if self.players[self.currentPlayer].buildRoad():
            if self.board.placeRoad(tileNumber, location, self.currentPlayer):
                print("Road placed at tile %d, location %d, by player %d" % (tileNumber, location, self.currentPlayer))
            else:
                print("issue placing Road please try again")
        else:
            print("No Roads left")
            

    def beginGame(self):
        self.board.printBoard()
    
    def inSetUp(self):
        return self.round <= 2
    
    def resourceMap(self):
        resList = self.board.resourceMap()
        print("          " + resList[0])
        print("    "+ resList[1])
        print(""+ resList[2])
        print("      "+ resList[3])
        print("         "+ resList[4])

    def rollDice(self):
        dice = [1,2,3,4,5,6]       
        #roll = random.choice(dice) + random.choice(dice)
        roll = 4
        print("You Rolled a " + str(roll))
        if roll == 7:
            self.seven()
        else:
            self.updateRes(roll)

    def updateRes(self, roll):
            tiles = self.board.rolledTiles(roll)
            print(len(tiles))
           
            for tile in tiles:
                playerDict = {}
                for player in self.players:
                    playerDict[player.playerNum] = 0
                
                res = tile.type
                payment = tile.getPayment(playerDict)
                print(payment)
                vals = {x:y for x,y in payment.items() if y!=0}
                if not len(vals) == 0:
                    listPay = list(vals.keys())
                    print(listPay)
                    for playerIndex in listPay:
                        print(playerIndex)
                        player = self.players[playerIndex]
                        player.updateResources(res, payment[playerIndex])

    def printPlayerStats(self):
        for player in self.players:
            player.printPlayerStats()
            player.printPlayerResources()

    def seven(self):
        print("TODO")



        

catan = Game(3)
catan.buildSettlement(1, 3)
catan.buildSettlement(2, 3)
catan.buildSettlement(4, 3)
catan.buildSettlement(5, 3)
catan.buildSettlement(6, 3)
catan.endTurn()
catan.buildSettlement(8, 3)
catan.buildSettlement(9, 3)
catan.buildSettlement(10, 3)
catan.buildSettlement(11, 3)
catan.buildSettlement(13, 3)
catan.endTurn()
catan.buildSettlement(14, 3)
catan.buildSettlement(15, 3)
catan.buildSettlement(17, 3)
catan.buildSettlement(18, 3)
#catan.beginGame()
#catan.resourceMap()
catan.rollDice()
catan.printPlayerStats()

